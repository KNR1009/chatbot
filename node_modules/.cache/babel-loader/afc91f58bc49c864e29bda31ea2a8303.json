{"ast":null,"code":"var _jsxFileName = \"/Users/itoukazunari/Desktop/React/chatbot/src/components/Forms/FormDialog.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextInput from \"./TextImport\";\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputName = event => {\n      this.setState({\n        name: event.target.value\n      });\n      console.log(this.state.name);\n    };\n\n    this.inputEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.inputDescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      description: \"\"\n    };\n    this.inputEmail = this.inputEmail.bind();\n    this.inputDescription = this.inputDescription.bind();\n    this.inputName = this.inputName.bind();\n  } // 入力値を更新する\n\n\n  // フォームを送信する内容\n  submitForm() {\n    // 入力値を変数に格納する\n    const name = this.state.name;\n    const email = 'emailです';\n    const description = 'テストです'; // スラッグに送る処理\n\n    const payload = {\n      text: 'お問い合わせがありました\\n' + 'お名前' + name + '\\n' + 'Email' + email + '\\n' + 'お問い合わせ内容: \\n' + description\n    };\n    const url = \"https://hooks.slack.com/services/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\";\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(payload)\n    }).then(() => {\n      alert('送信が完了しました。追って連絡します'); // stateを初期化する\n\n      this.setState({\n        name: \"\",\n        email: \"\",\n        description: \"\"\n      });\n      return this.props.handleClose();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: this.props.open,\n      onClose: this.props.handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u30D5\\u30A9\\u30FC\\u30E0\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      label: \"お名前(必須)\",\n      multiline: false,\n      rows: 1,\n      value: this.state.name,\n      type: \"text\",\n      onChange: this.inputName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      label: \"メールアドレス(必須)\",\n      multiline: false,\n      rows: 1,\n      value: this.state.email,\n      type: \"text\",\n      onChange: this.inputEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      label: \"お問い合わせ内容\",\n      multiline: true,\n      rows: 5,\n      value: this.state.description,\n      type: \"text\",\n      onChange: this.inputDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submitForm,\n      color: \"primary\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"\\u9001\\u4FE1\\u3059\\u308B\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/React/chatbot/src/components/Forms/FormDialog.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextInput","FormDialog","Component","constructor","props","inputName","event","setState","name","target","value","console","log","state","inputEmail","email","inputDescription","description","bind","submitForm","payload","text","url","fetch","method","body","JSON","stringify","then","alert","handleClose","render","open"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextInput from \"./TextImport\"\n\n\n\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      description: \"\",\n    };\n    this.inputEmail = this.inputEmail.bind();\n    this.inputDescription = this.inputDescription.bind();\n    this.inputName = this.inputName.bind();\n  }\n\n  \n  \n\n  // 入力値を更新する\n  inputName = (event) => {\n    this.setState({ name: event.target.value });\n    console.log(this.state.name);\n  };\n  inputEmail = (event) => {\n    this.setState({ email: event.target.value });\n  };\n  inputDescription = (event) => {\n    this.setState({ description: event.target.value });\n  };\n\n  // フォームを送信する内容\n\n  submitForm(){\n\n      // 入力値を変数に格納する\n      const name = this.state.name\n      const email = 'emailです'\n      const description = 'テストです'\n\n      // スラッグに送る処理\n      const payload = {\n        text: 'お問い合わせがありました\\n'+\n        'お名前' + name + '\\n' +\n        'Email' + email + '\\n' +\n        'お問い合わせ内容: \\n' + description\n      }\n\n        const url = \"https://hooks.slack.com/services/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\";\n\n        fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(payload)\n        }).then(()=>{\n            alert('送信が完了しました。追って連絡します')\n            // stateを初期化する\n            this.setState({\n              name: \"\",\n              email: \"\",\n              description: \"\",\n            })\n            return this.props.handleClose()\n        })\n\n\n      }\n\n  \n\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">お問い合わせフォーム</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <TextInput\n              label={\"お名前(必須)\"}\n              multiline={false}\n              rows={1}\n              value={this.state.name}\n              type={\"text\"}\n              onChange={this.inputName}\n            />\n            <TextInput\n              label={\"メールアドレス(必須)\"}\n              multiline={false}\n              rows={1}\n              value={this.state.email}\n              type={\"text\"}\n              onChange={this.inputEmail}\n            />\n            <TextInput\n              label={\"お問い合わせ内容\"}\n              multiline={true}\n              rows={5}\n              value={this.state.description}\n              type={\"text\"}\n              onChange={this.inputDescription}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.handleClose} color=\"primary\">\n            キャンセル\n          </Button>\n          <Button onClick={this.submitForm} color=\"primary\" autoFocus>\n            送信する\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}