{"ast":null,"code":"var _jsxFileName = \"/Users/itoukazunari/Desktop/React/chatbot/src/App.jsx\";\nimport React from 'react';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components/index\";\nimport FormDialog from \"./components/Forms/FormDialog\";\nimport { db } from \"./firebase/index\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectAnswer = (selectAnswer, nextQuestionId) => {\n      switch (true) {\n        // case nextQuestionId === \"init\":\n        //   this.displayNextQuestion(nextQuestionId);\n        //   break;\n        // urlできた場合の実装\n        case /^https:*/.test(nextQuestionId):\n          const a = document.createElement(\"a\");\n          a.href = nextQuestionId;\n          a.target = \"_blank\";\n          a.click();\n        // contactだった場合にもーだるウィ開く\n\n        case nextQuestionId === \"contact\":\n          this.handleClickOpen();\n          break;\n\n        default:\n          const chat = {\n            text: selectAnswer,\n            type: \"answer\"\n          };\n          const chats = this.state.chats;\n          chats.push(chat);\n          this.setState({\n            chats: chats\n          }); // 遅延時間を使って回答するようにする(2つの引数を取れる)\n\n          setTimeout(() => this.displayNextQuestion(nextQuestionId), 500);\n          break;\n      }\n    };\n\n    this.initDataset = dataset => {\n      this.setState({\n        dataset: dataset\n      });\n    };\n\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset: {},\n      open: false\n    };\n    this.selectAnswer = this.selectAnswer.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n  } // displayNextQuestion = (nextQuestionId) => {\n  //   const chats = this.state.chats;\n  //   chats.push({\n  //     text: this.state.dataset[nextQuestionId].question,\n  //     type: \"question\",\n  //   });\n  //   this.setState({\n  //     answers: this.state.dataset[nextQuestionId].answers,\n  //     chats: chats,\n  //     currentID: nextQuestionId,\n  //   });\n  // };\n\n\n  // モーダルの開閉操作のメソット(上でbindしている)\n  handleClickOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  initChats() {\n    const initDataset = this.state.dataset[this.state.currentID];\n    const chat = {\n      text: initDataset.question,\n      type: \"question\"\n    };\n    const chats = this.state.chats;\n    chats.push(chat);\n    this.setState({\n      chats: chats\n    });\n  }\n\n  componentDidMount() {\n    (async () => {\n      const dataset = this.state.dataset;\n      await db.collection('questions').get().then(snapshots => {\n        snapshots.forEach(doc => {\n          const id = doc.id;\n          const data = doc.data();\n          dataset[id] = data;\n        });\n      });\n      this.initDataset(dataset);\n    })();\n\n    const initAnswer = \"\";\n    this.selectAnswer(initAnswer, this.state.currentID);\n  }\n\n  componentDidUpdate() {\n    // スクロールが自動的に下がる実装する\n    const scrollArea = document.getElementById(\"scroll-area\");\n\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      select: this.selectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormDialog, {\n      open: this.state.open,\n      handleClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/React/chatbot/src/App.jsx"],"names":["React","AnswersList","Chats","FormDialog","db","App","Component","constructor","props","selectAnswer","nextQuestionId","test","a","document","createElement","href","target","click","handleClickOpen","chat","text","type","chats","state","push","setState","setTimeout","displayNextQuestion","initDataset","dataset","answers","currentID","open","bind","handleClose","initChats","question","componentDidMount","collection","get","then","snapshots","forEach","doc","id","data","initAnswer","componentDidUpdate","scrollArea","getElementById","scrollTop","scrollHeight","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './assets/styles/style.css'\nimport { AnswersList, Chats } from \"./components/index\";\nimport  FormDialog  from \"./components/Forms/FormDialog\";\nimport {db} from \"./firebase/index\";\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset:{},\n      open: false,\n    };\n\n    this.selectAnswer = this.selectAnswer.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n  }\n\n  // displayNextQuestion = (nextQuestionId) => {\n  //   const chats = this.state.chats;\n  //   chats.push({\n  //     text: this.state.dataset[nextQuestionId].question,\n  //     type: \"question\",\n  //   });\n\n  //   this.setState({\n  //     answers: this.state.dataset[nextQuestionId].answers,\n  //     chats: chats,\n  //     currentID: nextQuestionId,\n  //   });\n  // };\n\n  selectAnswer = (selectAnswer, nextQuestionId) => {\n    switch (true) {\n      // case nextQuestionId === \"init\":\n      //   this.displayNextQuestion(nextQuestionId);\n      //   break;\n      // urlできた場合の実装\n      case /^https:*/.test(nextQuestionId):\n        const a = document.createElement(\"a\");\n        a.href = nextQuestionId;\n        a.target = \"_blank\";\n        a.click();\n      \n        // contactだった場合にもーだるウィ開く\n        case nextQuestionId === \"contact\":\n          this.handleClickOpen();\n          break;\n\n      default: \n        const chat = {\n          text: selectAnswer,\n          type: \"answer\",\n        };\n\n        const chats = this.state.chats;\n        chats.push(chat);\n\n        this.setState({\n          chats: chats,\n        });\n        // 遅延時間を使って回答するようにする(2つの引数を取れる)\n        setTimeout(() => this.displayNextQuestion(nextQuestionId), 500);\n\n        break;\n    }\n  };\n\n  // モーダルの開閉操作のメソット(上でbindしている)\n\n  handleClickOpen(){\n    this.setState({\n      open: true,\n    });\n  }\n\n  handleClose(){\n    this.setState({\n      open: false,\n    });\n  }\n\n  initChats() {\n    const initDataset = this.state.dataset[this.state.currentID];\n    const chat = {\n      text: initDataset.question,\n      type: \"question\",\n    };\n    const chats = this.state.chats;\n    chats.push(chat);\n\n    this.setState({\n      chats: chats,\n    });\n  }\n\n  initDataset = (dataset) => {\n    this.setState({dataset:dataset})\n  }\n\n  componentDidMount() {\n      (async() => {\n        const dataset = this.state.dataset\n\n        await db.collection('questions').get().then(snapshots => {\n          snapshots.forEach(doc => {\n            const id = doc.id\n            const data = doc.data()\n            dataset[id] = data\n          })\n        })\n        this.initDataset(dataset);\n      })()\n       const initAnswer = \"\";\n       this.selectAnswer(initAnswer, this.state.currentID);\n  }\n\n  \n\n  componentDidUpdate() {\n    // スクロールが自動的に下がる実装する\n    const scrollArea = document.getElementById(\"scroll-area\");\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList\n            answers={this.state.answers}\n            select={this.selectAnswer}\n          />\n          <FormDialog open={this.state.open}\n          handleClose = {this.handleClose}\n          />\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}